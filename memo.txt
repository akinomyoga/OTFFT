

2015-11-11

* 更新されている。

  またもや大幅な書き換えになっている。
  ソースコードを幾らか読んでみたが冗長で繰り返しが多い。
  どうも何らかの別のプログラムから自動生成されている様に思われる。
  このままだと差分が本質的でなく使いづらい。

  もし original の otfft の更新が止まっているのであれば
  勝手に冗長な物を消して自動生成するプログラムを自分の手で書くのであるが、
  リアルタイムに更新されている物に対して大幅な書き換えを実行するのは困難である。
  これは最早作者に相談した方が良いような気がする…が連絡先が何処にも書かれていない。

  取り敢えず要望について整理しておいた方が良いように思う。

  1 自動生成のプログラムは公開不能か?

    或いは、公開可能な別の方式で自動生成する様にできないか。

  2 構造の変更?

    比較的短い同じ長さの FFT を何度も実行する時、
    長さによる switch (table jump) を何度も実行する事になるが、
    これを何とかループの外側に持って来られないか。

    これは多次元FFTを実行する際に絶対不可欠である。
    書き換えとしては複数の FFT (並列) を同時に実行できる様にすれば良い。

    或いはこちらで勝手に書き換えても良いか。

  3 実FFT

    実→複素で、複素数の後半も生成する様になっているが、
    後半は前半と等価な情報を持っているので、実際の数値計算で使用する事は滅多にない。
    メモリサイズを節約したいので後半を使用しないような version/flag を用意することはできないか。

  4 実FFT (2並列)

    多次元FFTの場合には同じ長さの実FFTを何度も実行する事になる。
    "1実FFTを半分の長さの複素FFTで実行するもの" だけでなく
    "2実FFTを同じ長さの複素FFTで実行するもの" も欲しい。
    (前者を二回繰り返した方が performance が高いのなら無意味かもしれないが)

  5 提案?

    勘違いしているだけで実はナンセンスな事を書いているかもしれないが。

    複数の方法のうち最速の物を選択する事になっているが、
    どの方法も一番長い変換から短い変換まで同一の方法を用いると想定している。
    複数の方法を混合した物も試してみて良いのではないか。
    例えば FFT(2^m) から FFT(2^{m-2}) を呼び出す時に既に分かっている最速の方法を呼ぶなど。

2015-10-24

* 改めてページを確認した所、更に更新がされている様だったので再度取得を試みる。

  $ mkdir html2; cd html2; wget -r http://www.moon.sannet.ne.jp/okahisa/stockham/stockham.html

  ソースコードの差分を見たら、check/cpp_fftw3.h の
  FFTW_MEASURE が FFTW_ESTIMATE に変更されただけであった。適用する。

* 更新otfft-4.0 → otfft-5.3

  元の otfft の version が上がっている様なので更新を行う。

  ファイルの増減は以下の通りである。

  --- a.find       2015-10-24 19:25:02.636561285 +0900
  +++ b.find       2015-10-24 19:25:02.643560487 +0900
  @@ -1,7 +1,6 @@

   /bstcheck.cpp
   /cpp_fftw3.h
  -/ctavx_fft.h
   /dctcheck.cpp
   /fftbench1.cpp
   /fftbench1.txt
  @@ -17,16 +16,16 @@
   /otfft/Makefile
   /otfft/otfft.cpp
   /otfft/otfft.h
  -/otfft/otfft_ctavx.h
  -/otfft/otfft_ctavxn.h
  -/otfft/otfft_difavx.h
  -/otfft/otfft_difavx8.h
  -/otfft/otfft_difavx8n.h
  -/otfft/otfft_difavxn.h
  -/otfft/otfft_ditavx.h
  -/otfft/otfft_ditavx8.h
  -/otfft/otfft_ditavx8n.h
  -/otfft/otfft_ditavxn.h
  +/otfft/otfft_avxdif4.h
  +/otfft/otfft_avxdif4omp.h
  +/otfft/otfft_avxdif8.h
  +/otfft/otfft_avxdif8omp.h
  +/otfft/otfft_avxdifx.h
  +/otfft/otfft_avxdit4.h
  +/otfft/otfft_avxdit4omp.h
  +/otfft/otfft_avxdit8.h
  +/otfft/otfft_avxdit8omp.h
  +/otfft/otfft_eightstep.h
   /otfft/otfft_fwd.h
   /otfft/otfft_fwd0.h
   /otfft/otfft_inv.h
  @@ -34,10 +33,14 @@
   /otfft/otfft_misc.h
   /otfft/otfft_setup.h
   /otfft/otfft_sixstep.h
  -/otfft/otfft_sixstepn.h
  +/otfft/otfft_sixstep0r.h
  +/otfft/otfft_sixstep0s.h
  +/otfft/otfft_sixstepnr.h
  +/otfft/otfft_sixstepns.h
   /otfft/stopwatch.h
  +/otfft/towin.sh
   /otfft/version.sh
   /rfftcheck.cpp
   /simple_fft.h
  +/towin.sh
   /unify.sh

  ot_fft_dif* から otfft_avxdif* に名称変更が行われている様である。
  一方でこちらで勝手に修正した項目も各ファイルに存在している。
  取り敢えず手許で行われた変更について確認を行う。

  ヘッダ名の変更
  -#include "otfft_misc.h"
  +#include "otfft/otfft_misc.h"
  と、#pragma omp を #ifdef _OPENMP で囲むという事だけの様だ。

  他に、以下のヘッダ名の変更がある。
  -#include "stopwatch.h"
  +#include "otfft/stopwatch.h"
  -#include "otfft.h"
  +#include "otfft/otfft.h"

  1 src ディレクトリ

    1.1 先ずファイルを新しいものに全て交換する。
      otfft.h stopwatch.h otfft_misc.h は otfft ディレクトリ以下に移動する。

    1.2 次に #ifdef _OPENMP の付加を以下のコマンドで実行する。
      $ sed -i 's/^[[:space:]]*#pragma[[:space:]]\{1,\}omp[[:space:]]\{1,\}.*$/#ifdef _OPENMP\n&\n#endif/g' *.h *.cpp otfft/*.h

    1.3 ヘッダファイル名の変更は以下で行う。
      $ refact '(otfft|otfft_misc|stopwatch)\.h' 'otfft/&' *.h *.cpp

    1.4 b/otfft/towin.sh をコピーする。

  2 check ディレクトリ以下についてもファイルを更新する。
    $ cd check; cp ../html/diff/b/*.{cpp,h} ./; rm ctavx_fft.h

    2.1 USE_FFTW_THREADS で囲む
      $ refact '^.*\bfftw_[a-z_]+threads\b.*$' '#ifdef USE_FFTW_THREADS\n&\n#endif'
      2行連続で fft_...threads の呼出をしている箇所が cpp_fftw.h にあったので微修正する。

      ※check ディレクトリ以下の *.cpp で otfft/otfft.h, otfft/stopwatch.h 等を include する時に、
        #include "..." ではなくて #include <...> を使う様にしていたが面倒なので、
        #include "..." のまま保持する事にした。

    2.2 /check/fftbench?.txt は repository から除外する。新しい物をコピーする。
      $ git rm fftbench?.txt

    2.3 b/towin.sh をコピーする。

  3 src/version.sh 差分を適用
